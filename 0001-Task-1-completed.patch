From d7922b1cd4abf5839abc861b725f3534fb5f3f00 Mon Sep 17 00:00:00 2001
From: AJ13O3 <amanjoshua03@gmail.com>
Date: Tue, 7 May 2024 22:13:48 +0100
Subject: [PATCH] Task 1 completed

Initial unit tests also completed
---
 __pycache__/client3.cpython-311.pyc | Bin 0 -> 1973 bytes
 client3.py                          |  11 ++++++++---
 client_test.py                      |   8 ++++++--
 3 files changed, 14 insertions(+), 5 deletions(-)
 create mode 100644 __pycache__/client3.cpython-311.pyc

diff --git a/__pycache__/client3.cpython-311.pyc b/__pycache__/client3.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..0620d181961e5c53a9464d606ca82362bb6ed41d
GIT binary patch
literal 1973
zcmaJ>O=ufO6rR!kXk|&Z<;YGQi!yF;8>O+=PDtY#r@^u1l0u9fHz8iqi1qH+mLh4D
z-Bm+W8ANG8fgDr_ji4#`P|}oKLMcrSJ*1FRPf`$#SST2J%1w}-a_XCvW!ZsdXXfpD
zGjG0me=|P?gIx%|Z@!ya``w4oKTK$U!5!x1Ul^e~NJlzOA*J=l3U+0W!s#A`*EvPd
z`LB^8>H<(Nm2~l{hwV52^dRbk(M5%Ofb#%G>)S8Qq0b*Fe$Ye7KwE=y$+it>tGhkB
z_fPq)p1pFL2OOO2oCMPk+DmBvx%;K9-d(jl%)K}4S3*9NKuRACfd{g308SR^f&HkL
zd4!a((yt6C2kAlDN5j*A2%2x{UK;)$>k{n;>Z1cdyXZln{vUk%F)+F{?(PTx_0m2)
zIJj#eNZlRj9>o2D8+)dZ7tw1T1JZ9gUWRNgqiD|yrnHbB-mvZLlq{zVO-*eWmOV8&
zJ~=L5%Te>j>4bjj%gw~U5KnD4rmzdVLL7{jcY)kNK2!kAjvbrW-lGj`p3a)ib@=^$
zZhBtZ#dkE{u!}2r3S1uS(1pAop-sMk*-U|7<H1WYf08VkhMv<XQBx^mZ%~q<RHr)m
zLQUnUMQnqt(+o9L8#IWn+G^HFWNhLHmThQP9j|R<<EshX5wd1Nqb*sruD)P_j$%hx
zOBt#i6&&GO&akP;V&nK=L%gN$1Kk#DLPC%w03qyqbw$2lQPYyuw3<m8)<#a1=L{{E
zrWxCkXN`0=2XJIrOVEr)<$1$Y*QxyJ;yJ@yS2OaOD~~3#X>HWHPDgDxXLLf=QlM@h
zAIsiw0_)VC1Ai8oKPJ0Hgc+a!DWYwDx)BJK-@mm`jQ!o)U#69_^?~=cuGa_TTJLzh
zcf5G^f2JG3f%1)7kZcXt0`C@M4S#PrT3NX-RQ;n>e)J`vBW<?`L14UFEN=tj77Nz#
z&J*F$J<Cu$1<X<h>EiP5kWZ*hAR7sT7;D6hVO%9@M&IFAiOCQbenwG`<K0<rGpiO`
zBgAB{ha*7%&NC!44B`<O76H<7-rHRs{;JSK9-(Jj>Mn^5e_#3J&C^x>kjWkvM~cVO
zY9bSl=e<iTu{z27h-#C=klLxdc$7fAr}EO#mRVD;a5OKuhmjG>;bzXvI^0}rK04^|
zNz2GMq6sb-X{S49rc#O3F_Xd#vusCf$&RpeA$ESn!3%DpT!Wbj88uDgafeSpDL4XP
ztWyWa9RX@iw;XR9#S17#mclVm7HQRXc$2ESBf2GNIiedT%VaOUTc9R{8=366b&Jxi
zZK#nDn_%9%@p~mrr{U(L=*Q*<FvqU6l>^%3FviUz2nULO)*2{SbXx=USKGZQBHz)X
z06#%0;-=`uV@<S6!Xh4OqFoY3e4vzn#tk-60MFv>V5sz2d89m2!QURfefZ{;TUVN>
zOPIwiTEdOcP&s`2P-Xt^!t=<nXOUwMPdu9bW%^0*iTE`5N6*uq+VREu@x@wXsUBH+
z9=Z4|a<LY<RF7P$g;wgJm6EtE%{D>@AnE;J2ItcOnbA_LF>&f)<T0&H%+)96YJss*
zto%_WalgM287|G2Pux5Qm!=de#UAHady-(Sx}@y%%WAdN`&MfKtsc;-Zr_%IC83n8
yOjahh=I@{Q@!Z1?ACLTcsx~xJADXFk&(x$db?Hpi?ae_JfmR%ve8*`wE&l-&%<Lcl

literal 0
HcmV?d00001

diff --git a/client3.py b/client3.py
index 3fc09b7..1f5eeef 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,17 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price+ask_price)/2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    if price_b == 0:
+        # to avoid throwing ZeroDivisonError
+        return
+    return price_a/price_b
 
 
 # Main
@@ -52,8 +55,10 @@ if __name__ == "__main__":
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
         """ ----------- Update to get the ratio --------------- """
+        prices = {}
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
diff --git a/client_test.py b/client_test.py
index af2bf26..298b03d 100644
--- a/client_test.py
+++ b/client_test.py
@@ -8,14 +8,18 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+      expected_result = (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price']) / 2)
+      self.assertEqual(getDataPoint(quote), expected_result)
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+      expected_result = (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price']) / 2)
+      self.assertEqual(getDataPoint(quote), expected_result)
 
   """ ------------ Add more unit tests ------------ """
 
-- 
2.39.3 (Apple Git-145)

